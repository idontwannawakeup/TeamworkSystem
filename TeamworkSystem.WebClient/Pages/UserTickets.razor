@using TeamworkSystem.WebClient.ViewModels
@using TeamworkSystem.WebClient.Interfaces 
@page "/tickets/{UserId}"
@inject ITicketsService TicketsService  

<MudText Class="mt-md-12 mb-4" Typo="@Typo.h3" Align="@Align.Left">Your active tickets</MudText>

<MudGrid Spacing="3">
    @if (tickets is not null && tickets.Count != 0)
    {
        @foreach (var ticket in tickets)
        {
            <MudItem xs="12" sm="6" md="3">
                <TicketCard Ticket="@ticket" />
            </MudItem>
        }
    }
    else if (tickets is not null)
    {
        <MudItem xs="12">
            <MudText Typo="@Typo.h5" Align="@Align.Center">You don't have any active tickets.</MudText>
        </MudItem>
    }
    else
    {
        <MudItem xs="12" Class="d-flex justify-center">
            <Loader />
        </MudItem>
    }
</MudGrid>

@code {

    [Parameter] public string UserId { get; set; }

    private List<TicketViewModel> tickets = null;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        tickets = await TicketsService.GetTicketsForUserAsync(UserId) as List<TicketViewModel>;
    }

}
