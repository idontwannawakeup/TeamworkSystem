@page "/home"
@inject IUsersService UsersService

<AuthorizeView>
    <Authorized>
        @if (user is not null)
        {
            <MudText Class="mt-md-12" Typo="@Typo.h3" Align="@Align.Center">
                Hello, @user.FullName!
            </MudText>
        }
        else
        {
            <MudText Class="mt-md-12" Typo="@Typo.h3" Align="@Align.Center">
                Hello!
            </MudText>
        }

        <MudText Class="mt-2 mb-6" Style="@subtitleStyle" Typo="@Typo.h5" Align="@Align.Center">
            Welcome to our platform
        </MudText>

        <MudGrid Spacing="4">
            <MudItem xs="12" sm="6" md="3">
                <MudCard Class="d-flex flex-column" Style="height: 100%">
                    <MudCardMedia Height="200"
                                  Image="assets/home/teams.png" />
                    <MudCardContent>
                        <MudText Typo="@Typo.body1">Here you cand find all your teams!</MudText>
                    </MudCardContent>
                    <MudCardActions Class="mt-auto">
                        <MudButton Link="/teams"
                                   Variant="@Variant.Text"
                                   Color="@Color.Primary">
                            Teams
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudCard Class="d-flex flex-column" Style="height: 100%">
                    <MudCardMedia Height="200"
                                  Image="assets/home/projects.png" />
                    <MudCardContent>
                        <MudText Typo="@Typo.body1">Here you can look up all projects of your teams!</MudText>
                    </MudCardContent>
                    <MudCardActions Class="mt-auto">
                        <MudButton Link="/projects"
                                   Variant="@Variant.Text"
                                   Color="@Color.Primary">
                            Projects
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudCard Class="d-flex flex-column" Style="height: 100%">
                    <MudCardMedia Height="200"
                                  Image="assets/home/tickets.jpg" />
                    <MudCardContent>
                        <MudText Typo="@Typo.body1">Here you can find all tickets, which are active for you</MudText>
                    </MudCardContent>
                    <MudCardActions Class="mt-auto">
                        <MudButton Link="/tickets"
                                   Variant="@Variant.Text"
                                   Color="@Color.Primary">
                            Tickets
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
            <MudItem xs="12" sm="6" md="3">
                <MudCard Class="d-flex flex-column" Style="height: 100%">
                    <MudCardMedia Height="200"
                                  Image="assets/home/friends.png" />
                    <MudCardContent>
                        <MudText Typo="@Typo.body1">Here you will find all your friends!</MudText>
                    </MudCardContent>
                    <MudCardActions Class="mt-auto">
                        <MudButton Link="/friends"
                                   Variant="@Variant.Text"
                                   Color="@Color.Primary">
                            Friends
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </Authorized>
</AuthorizeView>

@code {

    [CascadingParameter] private Task<AuthenticationState> StateAsync { get; set; }

    private UserViewModel user = null;

    private string subtitleStyle = $"color: {Colors.Grey.Default};";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var state = await StateAsync;
        if (state.User.Identity.IsAuthenticated)
        {
            var userId = state.User.Claims.First(claim => claim.Type == ClaimTypes.Authentication).Value;
            user = await UsersService.GetByIdAsync(userId);
        }
    }

}
