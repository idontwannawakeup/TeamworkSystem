@using System.Security.Claims
@using TeamworkSystem.WebClient.ViewModels
@using TeamworkSystem.WebClient.Interfaces
@page "/profile"
@inject IUsersService UsersService

@if (user is not null)
{
    <MudPaper Elevation="@elevation" Class="mt-10">
        <MudGrid>
            <MudItem xs="6" md="4" Class="mx-auto mx-md-0 pa-6">
                <img class="img-responsive" src="assets/home/projects.png" alt="Profile picture" />
            </MudItem>
            <MudItem xs="12" md="8">
                <MudElement HtmlTag="div" Class="user-profile__main-information pa-6">
                    <MudElement HtmlTag="div" Class="user-profile__title">
                        <MudText Typo="@Typo.h5" Color="@Color.Dark">@user.FullName</MudText>
                        <MudText Typo="@Typo.subtitle1" Color="@Color.Secondary">@user.Profession</MudText>
                    </MudElement>
                    <MudElement HtmlTag="div" Class="user-profile__ratings mt-4">
                        <MudText Typo="@Typo.h6" Style="@colorGrey">Rankings</MudText>
                        <MudRating ReadOnly="@true" SelectedValue="3" />
                    </MudElement>
                </MudElement>
            </MudItem>
        </MudGrid>
    </MudPaper>

    <MudGrid Spacing="4">
        <MudItem xs="12" md="4">
            <MudPaper Elevation="@elevation" Class="mt-10 pa-6">
                <MudText Typo="@Typo.h6" Style="@colorGrey">Profession</MudText>
                <MudText Typo="@Typo.subtitle2">@user.Profession</MudText>
                <MudDivider Class="mt-2 mb-4" />
                <MudText Typo="@Typo.h6" Style="@colorGrey">Specialization</MudText>
                <MudText Typo="@Typo.subtitle2">@user.Specialization</MudText>
                <MudDivider Class="mt-2 mb-4" />
                <MudText Typo="@Typo.h6" Style="@colorGrey">Email</MudText>
                <MudText Typo="@Typo.subtitle2">@user.Email</MudText>
                <MudDivider Class="mt-2 mb-4" />
                <MudButton FullWidth="@true"
                           Variant="@Variant.Outlined"
                           Color="@Color.Info"
                           EndIcon="@Icons.Material.Filled.Edit">
                    Edit
                </MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" md="8">
            <MudTabs Elevation="@elevation"
                     ApplyEffectsToContainer="@true"
                     Rounded="@true"
                     Class="mt-10">

                <MudTabPanel Text="Ratings">
                    <MudElement HtmlTag="div" Class="pa-6">
                        <MudList Clickable="@true">
                            @foreach (var number in Enumerable.Range(0, 7))
                            {
                                <MudListItem>
                                    <MudElement HtmlTag="div"
                                                Class="d-flex flex-column flex-sm-row justify-space-between gap-2">
                                        <MudElement HtmlTag="div"
                                                    Class="rating-item__author d-flex align-center gap-4">
                                            <MudAvatar Color="@Color.Secondary">A</MudAvatar>
                                            <MudText Typo="@Typo.subtitle1">AuthorName</MudText>
                                        </MudElement>
                                        <MudElement HtmlTag="div"
                                                    Class="rating-item__average d-flex flex-column align-center gap-1">
                                            <MudText Typo="@Typo.subtitle2">Average: 15.5</MudText>
                                            <MudRating SelectedValue="1" ReadOnly="@true" />
                                        </MudElement>
                                    </MudElement>
                                </MudListItem>
                                <MudDivider Class="mb-4" />
                            }
                        </MudList>
                    </MudElement>
                </MudTabPanel>

            </MudTabs>
        </MudItem>
    </MudGrid>
}

@code {

    [CascadingParameter] private Task<AuthenticationState> StateAsync { get; set; }

    private UserViewModel user = null;

    private readonly string colorGrey = $"color: {Colors.Grey.Default};";

    private readonly int elevation = 4;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var state = await StateAsync;
        var userId = state.User.Claims.First(claim => claim.Type == ClaimTypes.Authentication).Value;
        user = await UsersService.GetByIdAsync(userId);
    }

}
