<MudDrawer @bind-Open="@open"
           Elevation="1"
           ClipMode="DrawerClipMode.Always"
           Anchor="Anchor.Right">
    <MudDrawerHeader>
        <MudText Typo="@Typo.h6">ProjectName</MudText>
    </MudDrawerHeader>
    <MudNavMenu>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Filled.Visibility"
                    Href="@OverviewLink">
            <span>Overview</span>
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Filled.DeveloperBoard"
                    Href="@BoardLink">
            <span>Kanban Board</span>
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Filled.Assignment"
                    Href="@TicketsLink">
            <span>Tickets</span>
        </MudNavLink>
        <MudNavLink Match="NavLinkMatch.All"
                    Icon="@Icons.Material.Filled.Settings"
                    Href="@SettingsLink">
            <span>Settings</span>
        </MudNavLink>
    </MudNavMenu>
</MudDrawer>

<MudElement HtmlTag="div" Class="w-100p" Style="position: relative;">
    <MudFab Style="position: absolute; right: 5px; top: 70px;"
            Color="Color.Primary"
            Icon="@drawerIcon"
            IconSize="@Size.Large"
            Size="@Size.Small"
            OnClick="@ToggleDrawer" />

    @ChildContent

</MudElement>

@code {

    [Parameter] public int ProjectId { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }

    private string OverviewLink => $"/project/{ProjectId}/overview";

    private string BoardLink => $"/project/{ProjectId}/board";

    private string TicketsLink => $"/project/{ProjectId}/tickets";

    private string SettingsLink => $"/project/{ProjectId}/settings";

    private readonly string showIcon = Icons.Material.Filled.KeyboardArrowLeft;

    private readonly string hideIcon = Icons.Material.Filled.KeyboardArrowRight;

    private string drawerIcon = Icons.Material.Filled.KeyboardArrowLeft;

    bool open = false;

    void ToggleDrawer() =>
        (open, drawerIcon) = open ? (false, showIcon) : (true, hideIcon);

}
