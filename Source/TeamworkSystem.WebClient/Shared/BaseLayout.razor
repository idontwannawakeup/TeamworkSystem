@inject IStringLocalizer<SharedLocalization> SharedLocalizer
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration
@inject IUsersService UsersService
@inject ApiAuthenticationStateProvider StateProvider

<MudLayout>

    <MudAppBar Color="@Color.Primary" Fixed="@true">

        <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="@Color.Inherit"
                       Edge="@Edge.Start"
                       OnClick="@(_ => ToggleNavigationMenu())" />

        <MudSpacer />

        <MudElement Class="avatar-menu d-flex" HtmlTag="div" Style="position: relative;">
            <MudIconButton OnClick="@(_ => ToggleAvatarMenu())">
                <MudAvatar Image="@(_user?.Avatar is not null ? $"{Configuration["ApiUrl"]}/{_user.Avatar}" : null)"
                           Color="@Color.Secondary">
                    A
                </MudAvatar>
            </MudIconButton>
            <MudPopover Class="py-3"
                        Square="@true"
                        Open="@_avatarMenuOpen"
                        OffsetX="@true"
                        Direction="@Direction.Left"
                        Style="width: 250px; top: 12px;">
                <MudNavMenu>

                    <MudText Typo="Typo.h6" Class="px-4">@(_user?.FullName ?? "Loading...")</MudText>
                    <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">@(_user?.Email)</MudText>
                    <MudDivider Class="my-2" />
                    <MudNavLink Match="@NavLinkMatch.All"
                                Href="/profile"
                                Icon="@Icons.Filled.AccountCircle">
                        <span>@SharedLocalizer["Profile"]</span>
                    </MudNavLink>
                    <MudNavLink Match="@NavLinkMatch.All"
                                Href="/profile/settings"
                                Icon="@Icons.Filled.Settings">
                        <span>@SharedLocalizer["Settings"]</span>
                    </MudNavLink>
                    <MudDivider Class="my-2" />
                    <MudNavLink OnClick="@SignOutAsync" Icon="@Icons.Filled.ExitToApp">@SharedLocalizer["Exit"]</MudNavLink>

                </MudNavMenu>
            </MudPopover>

            @* Overlay for MudPopover for automatic close on click *@
            <MudOverlay @bind-Visible="@_avatarMenuOpen"
                        DarkBackground="@false"
                        AutoClose="@true"
                        LockScroll="@false" />
        </MudElement>

    </MudAppBar>

    @* Sidebar menu *@
    <MudDrawer @bind-Open="@_navigationMenuOpen" ClipMode="@DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            <MudText Typo="@Typo.h6" Class="py-2 px-4">TeamworkSystem</MudText>
            <MudDivider Class="my-2" />
            @* Adding Match to avoid always active state *@
            <MudNavLink Href="/home"
                        Match="@NavLinkMatch.All"
                        Icon="@Icons.Material.Filled.Home">
                <span>@SharedLocalizer["Home"]</span>
            </MudNavLink>
            <MudNavLink Href="/teams"
                        Match="@NavLinkMatch.All"
                        Icon="@Icons.Material.Filled.Groups">
                <span>@SharedLocalizer["Teams"]</span>
            </MudNavLink>
            <MudNavLink Href="/projects"
                        Match="@NavLinkMatch.All"
                        Icon="@Icons.Material.Filled.Folder">
                <span>@SharedLocalizer["Projects"]</span>
            </MudNavLink>
            <MudNavLink Href="/tickets"
                        Match="@NavLinkMatch.All"
                        Icon="@Icons.Material.Filled.Assignment">
                <span>@SharedLocalizer["Tickets"]</span>
            </MudNavLink>
            <MudNavLink Href="/friends"
                        Match="@NavLinkMatch.All"
                        Icon="@Icons.Material.Filled.Group">
                <span>@SharedLocalizer["Friends"]</span>
            </MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        @Body
    </MudMainContent>

</MudLayout>

@code {

    [Parameter] public RenderFragment Body { get; set; }

    [CascadingParameter] private Task<AuthenticationState> State { get; set; }

    private UserViewModel _user;

    private bool _navigationMenuOpen = false;

    private bool _avatarMenuOpen = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var userId = await ApiAuthenticationStateProvider.GetUserIdFromStateAsync(State);
        _user = await UsersService.GetByIdAsync(userId);
    }

    private void ToggleNavigationMenu() =>
        _navigationMenuOpen = !_navigationMenuOpen;

    private void ToggleAvatarMenu() =>
        _avatarMenuOpen = !_avatarMenuOpen;

    private async Task SignOutAsync()
    {
        await StateProvider.MarkUserAsLoggedOutAsync();
        NavigationManager.NavigateTo("/");
    }

}
