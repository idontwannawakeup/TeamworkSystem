@page "/ticket/{TicketId:guid}"
@layout ContainerlessLayout
@inject IStringLocalizer<SharedLocalization> SharedLocalizer 
@inject NavigationManager NavigationManager
@inject IConfiguration Configuration
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@inject ITicketsService TicketsService
@inject RequestErrorsHandler RequestErrorsHandler

<MudContainer MaxWidth="@MaxWidth.Large">
    <MudElement HtmlTag="div" Class="d-flex flex-wrap justify-space-between mb-2">
        @if (_ticket is not null)
        {
            <MudText Class="mt-3 mt-md-8 mb-4" Typo="@Typo.h4">@_ticket.Title</MudText>
        }
        else
        {
            <MudSkeleton Width="25%" Height="45px" Class="mt-3 mt-md-8 mb-4" />
        }

        @if (_userId == _ticket?.Project?.Team?.LeaderId)
        {
            <MudElement HtmlTag="div" Class="d-flex align-center gap-4">
                <MudButton Variant="@Variant.Outlined"
                           Color="@Color.Info"
                           EndIcon="@Icons.Material.Filled.Edit"
                           Link="@SettingsLink">
                    @SharedLocalizer["Edit"]
                </MudButton>
                <MudButton Variant="@Variant.Outlined"
                           Color="@Color.Error"
                           EndIcon="@Icons.Material.Filled.Delete"
                           OnClick="@DeleteTicketAsync">
                    @SharedLocalizer["Delete"]
                </MudButton>
            </MudElement>
        }

    </MudElement>
        
    <MudGrid Spacing="2">
        <MudItem xs="12" md="7" Class="pb-md-4">
            <MudText Typo="@Typo.h6" Style="@_colorGrey">@SharedLocalizer["Description"]</MudText>
            @if (_ticket is not null)
            {
                <MudText Typo="@Typo.body1">@_ticket.Description</MudText>
            }
            else
            {
                <MudSkeleton Width="100%" />
                <MudSkeleton Width="100%" />
                <MudSkeleton Width="100%" />
                <MudSkeleton Width="100%" />
                <MudSkeleton Width="100%" />
            }
        </MudItem>
        @* Attributes *@
        <MudItem xs="12" md="5" Class="pb-md-4">
            <MudElement HtmlTag="div" Class="d-flex align-center gap-3">
                <MudIcon Icon="@Icons.Material.Filled.ViewList" Style="@_fillGrey" />
                <MudText Typo="@Typo.h6" Style="@_colorGrey">@SharedLocalizer["Attributes"]</MudText>
            </MudElement>
            <MudDivider Class="mt-2 mb-4" />
            <MudElement HtmlTag="div" Class="ticket__attributes d-flex flex-column gap-3 px-3">
                @if (_ticket is not null)
                {
                    <MudElement Class="d-flex align-center justify-space-between">
                        <MudText Typo="@Typo.subtitle1">@SharedLocalizer["Executor"]</MudText>
                        @if (_ticket.Executor is not null)
                        {
                            <MudElement HtmlTag="div" Class="d-flex align-center gap-2">
                                <MudAvatar Image="@(_ticket.Executor.Avatar is not null ? $"{Configuration["ApiUrl"]}/{_ticket.Executor.Avatar}" : null)"
                                           Color="@Color.Secondary"
                                           Size="@Size.Small">
                                    A
                                </MudAvatar>
                                <MudText Typo="@Typo.subtitle2">@_ticket.Executor.FullName</MudText>
                            </MudElement>
                        }
                        else
                        {
                            <NoneChip />
                        }
                    </MudElement>
                    <MudElement Class="d-flex align-center justify-space-between">
                        <MudText Typo="@Typo.subtitle1">@SharedLocalizer["Project"]</MudText>
                        @if (_ticket.Project is not null)
                        {
                            <MudText Typo="@Typo.subtitle2">@_ticket.Project.Title</MudText>
                        }
                        else
                        {
                            <NoneChip />
                        }
                    </MudElement>
                    <MudElement Class="d-flex align-center justify-space-between">
                        <MudText Typo="@Typo.subtitle1">@SharedLocalizer["Type"]</MudText>
                        <MudChip Color="@Color.Primary"
                                 Size="@Size.Small"
                                 Label="@true">
                            @_ticket.Type
                        </MudChip>
                    </MudElement>
                    <MudElement Class="d-flex align-center justify-space-between">
                        <MudText Typo="@Typo.subtitle1">@SharedLocalizer["Status"]</MudText>
                        <MudChip Color="@Color.Default" Text="@_ticket.Status" Class="ma-0">@_ticket.Status</MudChip>
                    </MudElement>
                    <MudElement Class="d-flex align-center justify-space-between">
                        <MudText Typo="@Typo.subtitle1">@SharedLocalizer["Priority"]</MudText>
                        <MudText Typo="@Typo.subtitle2">@_ticket.Priority</MudText>
                    </MudElement>
                    <MudElement Class="d-flex align-center justify-space-between">
                        <MudText Typo="@Typo.subtitle1">@SharedLocalizer["CreationTime"]</MudText>
                        <MudText Typo="@Typo.subtitle2">@_ticket.CreationTime</MudText>
                    </MudElement>
                    <MudElement Class="d-flex align-center justify-space-between">
                        <MudText Typo="@Typo.subtitle1">@SharedLocalizer["Deadline"]</MudText>
                        @if (_ticket.Deadline is not null)
                        {
                            <MudText Typo="@Typo.subtitle2">@_ticket.Deadline</MudText>
                        }
                        else
                        {
                            <NoneChip />
                        }
                    </MudElement>
                }
                else
                {
                    <TicketAttributesSkeleton />
                }
            </MudElement>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {

    [Parameter] public Guid TicketId { get; set; }

    [CascadingParameter] private Task<AuthenticationState> State { get; set; }

    private readonly string _colorGrey = $"color: {Colors.Grey.Default};";
    private readonly string _fillGrey = $"fill: {Colors.Grey.Default};";

    private TicketViewModel _ticket;
    private Guid _userId;

    private string SettingsLink => $"/ticket/{TicketId}/settings";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _userId = await ApiAuthenticationStateProvider.GetUserIdFromStateAsync(State);
        await InitializeTicketAsync();
    }

    private async Task DeleteTicketAsync()
    {
        var confirmed = await DialogService.ShowDeleteConfirmingDialog(SharedLocalizer,
            SharedLocalizer["ConfirmTicketDeleting"]) ?? false;

        if (confirmed)
        {
            await RequestErrorsHandler.HandleRequestAsync(async () =>
            {
                await TicketsService.DeleteAsync(TicketId);
                Snackbar.Add("Ticket deleted", Severity.Success);
                NavigationManager.NavigateTo("/home");
            });
        }
    }

    private async Task InitializeTicketAsync()
    {
        await RequestErrorsHandler.HandleRequestAsync(async () =>
        {
            _ticket = await TicketsService.GetByIdAsync(TicketId);
        });
    }

}
